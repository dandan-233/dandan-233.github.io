(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{382:function(t,s,a){t.exports=a.p+"assets/img/prototype-chain.d48edc69.png"},421:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"手写实现-new"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手写实现-new"}},[t._v("#")]),t._v(" 手写实现 new")]),t._v(" "),n("blockquote",[n("p",[t._v("创建一个用户定义的对象类型的实例或具有构造函数的内置对象的实例。")])]),t._v(" "),n("h2",{attrs:{id:"new-做了哪些事"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new-做了哪些事"}},[t._v("#")]),t._v(" new 做了哪些事")]),t._v(" "),n("ol",[n("li",[t._v("第一个参数为构造函数，其他参数传给构造函数")]),t._v(" "),n("li",[t._v("实例对象需要访问构造函数的属性，所以我们通过原型链将两者联系起来。使用Object.create返回一个新对象")]),t._v(" "),n("li",[t._v("调用构造函数，将this指向新创建的对象obj,并且传入剩余的参数")]),t._v(" "),n("li",[t._v("判断构造函数返回值是否为对象，如果为对象就使用构造函数返回的值，否则返回 "),n("code",[t._v("obj")])])]),t._v(" "),n("blockquote",[n("p",[t._v("补充:")]),t._v(" "),n("p",[t._v("**"),n("code",[t._v("Object.create()")]),t._v("**方法创建一个新对象，使用现有的对象来提供新创建的对象的"),n("code",[t._v("__proto__")]),t._v("。")])]),t._v(" "),n("h2",{attrs:{id:"手写实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手写实现"}},[t._v("#")]),t._v(" 手写实现")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取参数的第一项为构造函数fn,这里可以写(arguments,1)也可以直接(arguments)，都是代表参数的第一项，取构造函数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" constructor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将obj.__proto__连接到构造函数fn的原型")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// obj.__proto__ = constructor.prototype;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//连接原型链,obj.__proto__ 不标准")]),t._v("\n    obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constructor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Object.create返回对象的属性__proto__,指向传入的对象")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// result接收构造函数执行后的返回结果")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果构造函数返回一个对象，则将该对象返回，否则返回步骤1创建的对象")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),n("p",[n("img",{attrs:{src:a(382),alt:"原型链"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);